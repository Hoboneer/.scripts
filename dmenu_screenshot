#!/bin/sh
# DESCRIPTION: A screenshot utility using dmenu.
# DEPENDENCIES: bspc(bspwm) identify(imagemagick) maim mktemp notify-send sxiv xclip xdotool xrandr
get_filename ()
{
	echo "$HOME/Pictures/screenshot-$(date +%Y-%m-%dT%H:%M:%S).png"
}

do_window ()
{
	maim --window $(xdotool getactivewindow)
}
do_screen ()
{
	maim
}
do_selection ()
{
	maim --select
}

# Set up sxiv for viewing a file in floating mode.
sxiv_view_floating ()
{
	# Ensure the sxiv window is fitted to the image size and is centred.
	img_size="$(identify -format '%[width]x%[height]\n' "$1")"
	rectangle="$(xrandr |
		awk -v imgsize="$img_size" -v OFS=+ '
			BEGIN {split(imgsize,IMG_DIMS,"x")}
			/\*/ {
				split($1,SCREEN_DIMS,"x");
				x = int((SCREEN_DIMS[1] - IMG_DIMS[1]) / 2);
				y = int((SCREEN_DIMS[2] - IMG_DIMS[2]) / 2);
				print imgsize, x, y;
				exit
			}')"
	bspc rule -a 'Sxiv:*' --one-shot state=floating rectangle="$rectangle"
	sxiv -b -p "$1" &
	# We want sxiv to see the image before we do clean up, since
	# "$1" might be the tempfile to be deleted soon.
	sleep 2
}
# Cleans up tempfiles on exit.
# Preserves exit status.
# Handling signals (other than the EXIT pseudo-signal) result in exit code 2.
clean_up ()
{
	case "$1" in
		normal)		__clean_up_err="$?" ;;
		error|*)	__clean_up_err=2 ;;
	esac
	shift
	rm -f -- "$@"
	# Reset EXIT trap and exit.
	trap 0
	exit "$__clean_up_err"
}

options='
window
screen
selection
'
dests='
clipboard
file
fileview
tempview
'
opt="$(echo "$options" | sed '1d; $d' | dmenu -i -p 'What kind of screenshot?')" || exit 1
case "$opt" in
	window|screen|selection)
		f="$(mktemp)"
		trap 'clean_up normal "$f"' EXIT
		trap 'clean_up error "$f"' HUP INT QUIT TERM
		cmd=do_$opt
		dest="$(echo "$dests" | sed '1d; $d' | dmenu -i -p 'Save where?')" || exit 1
		if $cmd > "$f"; then
			case "$dest" in
				clipboard)
					xclip -selection clipboard -target image/png < "$f"
					notify-send -t 500 'Screenshot saved to clipboard'
					;;
				# Save into file, optionally viewing it at the same time.
				file|fileview)
					realf="$(get_filename)"
					if mv "$f" "$realf"; then
						notify-send -t 2000 "Screenshot saved to '$realf'"
						if [ "$dest" = fileview ]; then
							sxiv_view_floating "$realf"
						fi
					else
						notify-send -t 5000 -u critical "dmenu_screenshot: failed to save screenshot" "Tried to save to '$realf' but mv failed"
						exit 1
					fi
					;;
				# View the screenshot without saving it.
				tempview)
					sxiv_view_floating "$f"
					;;
				*)
					notify-send -t 5000 -u critical \
						"dmenu_screenshot: invalid destination" \
						"Got '$dest' but should be one of '$(echo "$dests" | sed '1d; $d' | tr '\n' ' ' | sed 's/ $//')'"
					exit 1
					;;
			esac
		else
			notify-send -t 5000 -u critical "dmenu_screenshot: maim failed or saving to tempfile failed"
			exit 1
		fi
		;;
	*)
		notify-send -t 5000 -u critical \
			"dmenu_screenshot: invalid option" \
			"Got '$opt' but should be one of '$(echo "$options" | sed '1d; $d' | tr '\n' ' ' | sed 's/ $//')'"
		exit 1 ;;
esac
